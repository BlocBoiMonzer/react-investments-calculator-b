import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import styles from '@/styles/Home.module.css'
import { useState, useEffect } from 'react'
import NumberInput from '/components/NumberInput'
import FinalAmount from '@/components/FinalAmount'
import BarChart from '@/components/BarChart'
import AnnualSums from '@/components/AnnualSums'
import MainInputs from '@/components/MainInputs'


const inter = Inter({ subsets: ['latin'] })

export default function Home() {

  const [dollarsPerMonth, setDollarsPerMonth] = useState(200)
  const [interestRatePercentage, setInterestRatePercentage] = useState(12)
  const [interestRateDecimal, setInterestRate] = useState(interestRatePercentage / 100)
  const [yearsInvested, setYearsInvested] = useState(0)
  const [lowerAge, setLowerAge] = useState(30)
  const [upperAge, setUpperAge] = useState(40)
  const [finalAge, setFinalAge] = useState(65)
  const amountPerYear = []
  const [finalAmount, setFinalAmount] = useState(amountPerYear[amountPerYear.length - 1])
  const [taxRateDecimal, setTaxRateDecimal] = useState(0.3)
  const [taxRatePercentage, setTaxRatePercentage] = useState(30) 
  const [annualIncomeAfterTaxes, setAnnualIncomeAfterTaxes] = useState(); 

  useEffect(() => {
    setYearsInvested(upperAge - lowerAge)
    setInterestRate(interestRatePercentage / 100)
    setFinalAmount(amountPerYear[amountPerYear.length - 1])

    // Update tax rate 
    setTaxRateDecimal(taxRatePercentage / 100)

    // Update annual income after taxes 
    setAnnualIncomeAfterTaxes(finalAmount*interestRateDecimal * (1 - taxRateDecimal))

  }, [upperAge, lowerAge, interestRatePercentage, amountPerYear, finalAge, taxRatePercentage])

  for (let i = 0; i < yearsInvested; i++){

    const previousYearAmtPlusInterest = amountPerYear.length > 0 ? amountPerYear[i - 1] * (interestRateDecimal+1) : 0
    const amount = dollarsPerMonth * 12 + previousYearAmtPlusInterest; 

    amountPerYear.push( amount )
  }
  
  // If final age is greater than upperage, push the difference to arrray 
  // Add on to the array the values for ages where money is no longer being invested
  if (finalAge > upperAge) {
    for (let i = upperAge; i < finalAge; i++){
      const previousYearAmtPlusInterest = amountPerYear.length > 0 ? amountPerYear[i - lowerAge - 1] * (interestRateDecimal + 1) : 0
      const amount = previousYearAmtPlusInterest; 
  
      amountPerYear.push( amount )
    }
  }

  const data = [
    {quarter: 1, earnings: 13000},
    {quarter: 2, earnings: 16500},
    {quarter: 3, earnings: 14250},
    {quarter: 4, earnings: 19000}
  ];

  const annualData = [
  ]

  amountPerYear.forEach((value, index, array) => {
    annualData.push({x: index + lowerAge + 1, y: value})
    console.log(annualData)
  })

  return (
    <>
      <Head>
        <title>Investment Calculator</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main} p-6`}>

        <div>
          <h1 className="text-center text-2xl mb-4 font-light">Investment Calculator</h1>
          <p className="font-extralight text-lg">Calculate the future value of a monthly investment you make for a number of years.</p>

          <MainInputs 
            dollarsPerMonth={dollarsPerMonth} 
            setDollarsPerMonth={setDollarsPerMonth} 
            interestRatePercentage={interestRatePercentage} 
            setInterestRatePercentage={setInterestRatePercentage}
            lowerAge={lowerAge}
            setLowerAge={setLowerAge}
            upperAge={upperAge}
            setUpperAge={setUpperAge}
            yearsInvested={yearsInvested}
            finalAge={finalAge}
            setFinalAge={setFinalAge}
          /> 

          {/* Total Amount Display */}
          <div className="mt-14 mb-16">
            <FinalAmount 
              amount={finalAmount}
              text={`Total amount earned by age ${finalAge}:`}
            /> 
            <FinalAmount 
              amount={finalAmount*interestRateDecimal}
              text={`My annual income at ${interestRatePercentage}% per year of this total is: `}
            /> 

            <NumberInput
              labelValue={'Amount of taxes I will pay on my investment when I withdraw (%):'}
              defaultValue={taxRatePercentage}
              changeEventHandler={setTaxRatePercentage}
              inputName={'final-age'}
            /> 

            <FinalAmount 
              amount={finalAmount*interestRateDecimal * (1 - taxRateDecimal)}
              text={`After ${taxRateDecimal * 100}% to taxes, I am taking home this much per year:`}
            /> 
            <FinalAmount 
              amount={annualIncomeAfterTaxes / 12}
              text={"This makes this much per month:"}
            /> 
          </div>

          <BarChart 
            lowerAge={lowerAge}
            finalAge={finalAge}
            annualData={annualData}
            amountPerYear={amountPerYear}
          />

          <AnnualSums 
            amountPerYear={amountPerYear}
            interestRateDecimal={interestRateDecimal}
            yearsInvested={yearsInvested}
            dollarsPerMonth={dollarsPerMonth}
            lowerAge={lowerAge}
            interestRatePercentage={interestRatePercentage}
          /> 
          
        </div>
        <div>
          <h2 className="text-center">Some Tips</h2>
          <ul className="list-disc">
            <li>
              <div>
                <p>
                  Investing $200 a month from age 30 to age 40 will yield about $715k by age 65. This amount of money will earn an average of $85k per year at 12% (the market average rate of return). 
                </p>
                <p className="mt-4">
                  That means you will have an income of $85k every year minus taxes. If we subtract 30%, that leaves ${Math.floor(85 * 0.7)}k. You would never have to work or invest again, and you will be able to pull out ${Math.floor(85 * 0.7)}k every year for the rest of your life. Even if you were to live to 1,000,000 years old.
                </p>
              </div>
            </li>
          </ul>
        </div>
      </main>
    </>
  )
}
